swagger: "2.0"
info:
  version: "0.0.1"
  title: Movies App
# during dev, should point to your local machine
host: localhost
# basePath prefixes all resource paths 
basePath: /
# 
schemes:
  # tip: remove http to make production-grade
  - http
  - https
# format of bodies a client can send (Content-Type)
consumes:
  - application/json
# format of the responses to the client (Accepts)
produces:
  - application/json
x-a127-config: {}
x-a127-services: {}
paths:
  /hello:
    # binds a127 app logic to a route
    x-swagger-router-controller: hello_world
    x-a127-apply: {}
    get:
      description: Returns 'Hello' to the caller
      # used as the method name of the controller
      operationId: hello
      parameters:
        - name: name
          in: query
          description: The name of the person to whom to say hello
          required: false
          type: string
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/HelloWorldResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /movies:
    # binds a127 app logic to a route
    x-swagger-router-controller: movies
    x-a127-apply: {}
    get:
      description: Returns information about all movies
      # used as the method name of the controller
      operationId: getAllMovies
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/MoviesResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /movies/{id}:
    # binds a127 app logic to a route
    x-swagger-router-controller: movies
    x-a127-apply: {}
    get:
      description: Returns information about movies
      # used as the method name of the controller
      operationId: getMovies
      parameters:
        - name: id
          in: path
          description: ID of the movie to query
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/MoviesResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    post:
      description: Add/modify a movie in the database
      # used as the method name of the controller
      operationId: postMovies
      parameters:
        - name: id
          in: path
          description: ID of the movie to add/modify
          required: true
          type: string
          format: uuid
        - name: title
          in: header
          description: The title of the movie
          required: true
          type: string
        - name: year
          in: header
          description: The year of the movie release
          required: true
          type: integer
        - name: actor1
          in: header
          description: The name of the leading actor
          required: true
          type: string
        - name: actor2
          in: header
          description: The name of a supporting actor
          required: true
          type: string
        - name: actor3
          in: header
          description: The name of another supporting actor
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/MoviesResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    delete:
      description: Deletes a movie from the database
      # used as the method name of the controller
      operationId: deleteMovies
      parameters:
        - name: id
          in: path
          description: ID of the movie to delete
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/MoviesResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
# complex objects have schema definitions
definitions:
  HelloWorldResponse:
    required:
      - message
    properties:
      message:
        type: string
  MoviesResponse:
    required:
      - message
    properties:
      message:
        type: string
  ErrorResponse:
    required:
      - message
    properties:
      message:
        type: string
